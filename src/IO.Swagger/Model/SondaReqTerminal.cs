/* 
 * Sonda Saque e Pague
 *
 * Modelo de API para o serviço de sonda da Saque e Pague. Parceiro pode requisitar o último estado de uma transação (cancelada, confirmada ou pendente) através das chamadas desta API. Caso não encontre a transação, o serviço retorna o estado pendente.
 *
 * OpenAPI spec version: 1.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Objeto de requisição que contem dados do estabelecimento que gerou a transação sondada.
    /// </summary>
    [DataContract]
    public partial class SondaReqTerminal :  IEquatable<SondaReqTerminal>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SondaReqTerminal" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected SondaReqTerminal() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="SondaReqTerminal" /> class.
        /// </summary>
        /// <param name="codEstab">Código do estabelecimento da transação original. Gerado pelo sistema da SEP. (required).</param>
        public SondaReqTerminal(int? codEstab = default(int?))
        {
            // to ensure "codEstab" is required (not null)
            if (codEstab == null)
            {
                throw new InvalidDataException("codEstab is a required property for SondaReqTerminal and cannot be null");
            }
            else
            {
                this.CodEstab = codEstab;
            }
        }
        
        /// <summary>
        /// Código do estabelecimento da transação original. Gerado pelo sistema da SEP.
        /// </summary>
        /// <value>Código do estabelecimento da transação original. Gerado pelo sistema da SEP.</value>
        [DataMember(Name="codEstab", EmitDefaultValue=false)]
        public int? CodEstab { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SondaReqTerminal {\n");
            sb.Append("  CodEstab: ").Append(CodEstab).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SondaReqTerminal);
        }

        /// <summary>
        /// Returns true if SondaReqTerminal instances are equal
        /// </summary>
        /// <param name="input">Instance of SondaReqTerminal to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SondaReqTerminal input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CodEstab == input.CodEstab ||
                    (this.CodEstab != null &&
                    this.CodEstab.Equals(input.CodEstab))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CodEstab != null)
                    hashCode = hashCode * 59 + this.CodEstab.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // CodEstab (int?) minimum
            if(this.CodEstab < (int?)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CodEstab, must be a value greater than or equal to 1.", new [] { "CodEstab" });
            }

            yield break;
        }
    }

}
